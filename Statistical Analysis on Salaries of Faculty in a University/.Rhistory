geom_boxplot(outlier.color = "#F56600")+
labs(title = "BoxPlot of Salary")
hist2A
hist2B
bp2
# Histogram
hist2A <- SalariesF%>%
ggplot(mapping = aes(x = salary))+
geom_histogram(binwidth = 25000)+
labs(title = "Histogram of Salary")
hist2B <- SalariesM %>%
ggplot(mapping = aes(x = salary, fill = sex))+
geom_histogram(binwidth = 25000, alpha = 0.8)+
labs(title = "Histogram of Salary")
#BoxPlot
bp2 <-  Salaries %>%
ggplot(mapping = aes(x = salary, fill = sex))+
geom_boxplot(outlier.color = "#F56600")+
labs(title = "BoxPlot of Salary")
hist2A
hist2B
bp2
# Histogram
hist2A <- SalariesF%>%
ggplot(mapping = aes(x = salary))+
geom_histogram(binwidth = 25000)+
labs(title = "Histogram of Salary")
hist2B <- SalariesM %>%
ggplot(mapping = aes(x = salary, fill = sex))+
geom_histogram(binwidth=25000, alpha = 0.8)+
labs(title = "Histogram of Salary")
# BoxPlot
bp2 <-  Salaries %>%
ggplot(mapping = aes(x = salary, fill = sex))+
geom_boxplot(outlier.color = "#F56600")+
labs(title = "BoxPlot of Salary")
hist2A
hist2B
bp2
library(ggpubr)
library(carData)
library(tidyverse)
library(qqplotr)
library(rstatix)
library(gridExtra)
library(car)
library(leaps)
library(readxl)
library(moderndive)
library(DT)
Salaries %>%
group_by(discipline) %>%
summarise(Mean_Salary = mean(salary, na.rm = TRUE),
Sd_Salary = sd(salary, na.rm = TRUE),
Count = n()
)
Salaries %>%
group_by(discipline) %>%
summarise(Mean_Salary = mean(salary, na.rm = TRUE),
Sd_Salary = sd(salary, na.rm = TRUE),
Count = n()
) %>% knitr::kable()
Salaries %>%
group_by(discipline) %>%
summarise(Mean_Salary = mean(salary, na.rm = TRUE),
Sd_Salary = sd(salary, na.rm = TRUE),
Count = n()
) #%>% knitr::kable()
test1 <- Salaries %>%
t_test(salary ~ discipline) %>%
add_significance()
test1
plot1 <- ggplot(Salaries, aes(x = salary, y = yrs_service))+geom_point(color = "pink")
plot2 <- ggplot(Salaries, aes(x = salary, y = sex, color = sex))+geom_point()
plot3 <- ggplot(Salaries, aes(x = salary, y = rank))+geom_point(color = "blue")
plot4 <- ggplot(Salaries, aes(x = salary, y = discipline))+geom_point(color = "violet")
plot1
plot2
plot3
plot4
plot(seq, scale = "adjr2", main = "SeqRep Adj R^2")
plot(backward, scale = "adjr2", main = "BackWard Adj R^2")
seq <- regsubsets(salary~., data = Salaries, method = "seqrep")
lm <- lm(salary~., data = Salaries)
forward <- regsubsets(salary~., data = Salaries, method = "forward")
library(tidyverse)
library(qqplotr)
library(rstatix)
library(gridExtra)
library(car)
library(leaps)
library(readxl)
library(moderndive)
library(DT)
lm <- lm(salary~., data = Salaries)
forward <- regsubsets(salary~., data = Salaries, method = "forward")
summary(forward)
plot(forward, scale="adjr2", main="Forward: Adjusted R Square")
seq <- regsubsets(salary~., data = Salaries, method = "seqrep")
summary(seq)
plot(seq, scale = "adjr2", main = "SeqRep Adj R^2")
best.sum<- summary(best)
best <- regsubsets(salary~., data=Salaries)
plot(best, scale="adjr2", main="Best-fit: Adjusted R square")
plot(best, scale="Cp", main="Best-fit: Cp")
plot(best, scale="bic", main="Best-fit: BIC")
best.sum<- summary(best)
out.table <- data.frame(best.sum$outmat, best.sum$adjr2, best.sum$rss, best.sum$cp, best.sum$bic)
out.table
chosen.lm <- lm(salary~rank+discipline+sex, data = Salaries)
chosen.table <- get_regression_table(chosen.lm, digits = 15)
chosen.lm
plot(chosen.lm, 1, col="blue", pch=19)
#NCV TEST
NCV <- ncvTest(chosen.lm)
NCV
ggqqplot(residuals(chosen.lm))
library(ggpubr)
library(tidyverse)
library(qqplotr)
library(rstatix)
library(gridExtra)
library(car)
library(leaps)
library(readxl)
library(moderndive)
library(DT)
ggqqplot(residuals(chosen.lm))
# Durbin Watson test for independence(No AutoCorrelation)
dwt <- durbinWatsonTest(chosen.lm)
dwt
# In order to have correlation matrix, we need the categorical data must be in numbers
COR <- cor(Salaries[,c(1, 2, 4, 5)])
COR %>% knitr::kable()
vif(chosen.lm) %>% knitr::kable() #vif is From Cars Package
Salaries.sum <-  get_regression_summaries(chosen.lm, digits=20)
Salaries.sum
plot1 <- ggplot(Salaries, aes(x = salary, y = yrs_service))+geom_point(color = "red")
SalariesM <- Salaries %>% filter(sex == "Male" )
Salaries <- read_csv("Salaries.csv") %>% janitor::clean_names()
library(ggpubr)
library(tidyverse)
library(qqplotr)
library(rstatix)
library(gridExtra)
library(car)
library(leaps)
library(readxl)
library(moderndive)
library(DT)
Salaries <- read_csv("Salaries.csv") %>% janitor::clean_names()
datatable(head(Salaries, 100),
rownames = FALSE,
extensions = 'Scroller',
filter = 'bottom')
SalariesM <- Salaries %>% filter(sex == "Male" )
SalariesF <- Salaries %>% filter(discipline == "Female")
SalariesM
SalariesM <- Salaries %>% filter(sex == "Male" )
SalariesF <- Salaries %>% filter(discipline == "Female")
SalariesF
# Histogram
hist2A <- SalariesF %>%
ggplot(mapping = aes(x = salary, fill = sex))+
geom_histogram(binwidth=25000, alpha = 0.8)+
labs(title = "Histogram of Salary")
hist2B <- SalariesM %>%
ggplot(mapping = aes(x = salary, fill = sex))+
geom_histogram(binwidth=25000, alpha = 0.8)+
labs(title = "Histogram of Salary")
# BoxPlot
bp2 <-  Salaries %>%
ggplot(mapping = aes(x = salary, fill = sex))+
geom_boxplot(outlier.color = "#F56600")+
labs(title = "BoxPlot of Salary")
hist2A
hist2B
bp2
SalariesM <- Salaries %>% filter(sex == "Male" )
SalariesF <- Salaries %>% filter(sex == "Female")
# Histogram
hist2A <- SalariesF %>%
ggplot(mapping = aes(x = salary, fill = sex))+
geom_histogram(binwidth=25000, alpha = 0.8)+
labs(title = "Histogram of Salary")
hist2B <- SalariesM %>%
ggplot(mapping = aes(x = salary, fill = sex))+
geom_histogram(binwidth=25000, alpha = 0.8)+
labs(title = "Histogram of Salary")
# BoxPlot
bp2 <-  Salaries %>%
ggplot(mapping = aes(x = salary, fill = sex))+
geom_boxplot(outlier.color = "#F56600")+
labs(title = "BoxPlot of Salary")
hist2A
hist2B
bp2
backward <- regsubsets(salary~., data = Salaries, method = "backward")
summary(backward)
plot(backward, scale = "adjr2", main = "BackWard Adj R^2")
backward <- regsubsets(salary~., data = Salaries, method = "backward")
summary(backward)
plot(backward, scale = "adjr2", main = "BackWard Adj R^2")
Salaries <- Salaries %>%
select(rank, discipline, yrs_service, sex, salary)
datatable(head(Salaries, 100),
rownames = FALSE,
extensions = 'Scroller',
filter = 'bottom')
Salaries <- Salaries %>%
mutate(rank = case_when(
rank == "Prof"      ~ "1",
rank == "AssocProf" ~ "2",
rank == "AsstProf"  ~ "3",
TRUE                ~  as.character(rank)
),
discipline = case_when(
discipline == "A" ~ "1",
discipline == "B" ~ "2",
TRUE              ~ as.character(discipline)
),
sex = case_when(
sex == "Female" ~ "1",
sex == "Male"   ~ "2",
TRUE            ~ as.character(sex)
),
rank =as.numeric(rank),
discipline = as.numeric(discipline),
sex = as.numeric(sex)
)
Salaries
plot(forward, scale="adjr2", main="Forward: Adjusted R Square")
plot(backward, scale = "adjr2", main = "BackWard Adj R^2")
backward <- regsubsets(salary~., data = Salaries, method = "backward")
summary(backward)
plot(backward, scale = "adjr2", main = "BackWard Adj R^2")
chosen.table %>% knitr::kable()
Salaries.sum <-  get_regression_summaries(chosen.lm, digits=20)
Salaries.sum
new <- data.frame(rank = 1, sex = 2, discipline = 1)
prediction <- predict(chosen.lm, newdata = new, interval = "confidence")
prediction %>% knitr::kable()
Correlation1 <- cor(Salaries[,c(1, 2, 4, 5)])
Correlation1
Salaries <- read_csv("Salaries.csv") %>% janitor::clean_names()
library(ggpubr) # to draw ggqqplots through which we can find the normality of sample data set
library(tidyverse) # For data wrangling, piping, ggplots.
library(qqplotr)
library(rstatix) # For hypothesis testing, linear regression
library(gridExtra)# For arranging the plots
library(car)
library(leaps)
library(readxl)
library(moderndive)
library(DT) # For Interactive data sets
Salaries <- read_csv("Salaries.csv") %>% janitor::clean_names()
datatable(head(Salaries, 100),
rownames = FALSE,
extensions = 'Scroller',
filter = 'bottom')
Correlation1 <- cor(Salaries[,c(4, 5)])
Correlation1
Salaries %>%
group_by(discipline) %>%
summarise(Mean_Salary = mean(salary, na.rm = TRUE),
Sd_Salary = sd(salary, na.rm = TRUE),
Count = n()
) #%>% knitr::kable()
Salaries %>%
group_by(sex) %>%
summarise(Mean_Salary = mean(salary, na.rm = TRUE),
Sd_Salary = sd(salary, na.rm = TRUE),
Count = n()
)
Salaries %>%
group_by(sex) %>%
summarise(Mean_Salary = mean(salary, na.rm = TRUE),
Sd_Salary = sd(salary, na.rm = TRUE),
Count = n()
)
library(ggpubr)     # to draw ggqqplots through which we can find the normality of sample data set
library(tidyverse)  # For data wrangling, piping, datavisulization.
library(qqplotr)
library(rstatix)    # Pipe Friendliy R-Functions for statistical analyses.
library(gridExtra)  # For arranging the plots
library(car)
library(leaps)      # For selecting Regression Model
library(moderndive) #Datasets and wrapper functions for tidyverse-friendly introductory linear regression
library(DT)         # For Interactive data sets
Salaries <- read_csv("Salaries.csv") %>% janitor::clean_names()
datatable(head(Salaries, 100),
rownames = FALSE,
extensions = 'Scroller',
filter = 'bottom')
Salaries <- Salaries %>%
select(rank, discipline, yrs_service, sex, salary)
datatable(head(Salaries, 20),
rownames = FALSE,
extensions = 'Scroller',
filter = 'bottom')
Salaries %>%
group_by(sex) %>%
summarise(Mean_Salary = mean(salary, na.rm = TRUE),
Sd_Salary = sd(salary, na.rm = TRUE),
Count = n()
)
View(prediction)
View(prediction)
View(plot4)
View(plot4)
View(plot4)
View(plot4)
View(plot4)
View(plot4)
View(plot4)
View(plot4)
View(plot4)
View(plot4)
View(plot4)
View(plot4)
# Finding normality of sample based on discipline using ggqqplot() function from ggpubr
ggqqplot(Salaries, x = "salary", facet.by = "discipline")
# Data Visualization based on response variable(salary) vs explanatory variable(yrs_service, sex, rank, discipline) using ggplot() function from tidyverse package/ suit
plot1 <- ggplot(Salaries, aes(x = salary, y = yrs_service))+geom_point(color = "red") +
labs(title = "Salary vs Years of service", x = "Salary($)", y = "Years of service")
# Data Visualization based on response variable(salary) vs explanatory variable(yrs_service, sex, rank, discipline) using ggplot() function from tidyverse package/ suit
plot1 <- ggplot(Salaries, aes(x = salary, y = yrs_service))+geom_point(color = "red") +
labs(title = "Salary vs Years of service", x = "Salary($)", y = "Years of service")
library(ggpubr)     # to draw ggqqplots through which we can find the normality of sample data set
library(tidyverse)  # For data wrangling, piping, datavisulization.
library(qqplotr)
library(rstatix)    # Pipe Friendliy R-Functions for statistical analyses.
library(gridExtra)  # For arranging the plots
library(car)
library(leaps)      # For selecting Regression Model
library(moderndive) #Datasets and wrapper functions for tidyverse-friendly introductory linear regression
library(DT)         # For Interactive data sets
# Data Visualization based on response variable(salary) vs explanatory variable(yrs_service, sex, rank, discipline) using ggplot() function from tidyverse package/ suit
plot1 <- ggplot(Salaries, aes(x = salary, y = yrs_service))+geom_point(color = "red") +
labs(title = "Salary vs Years of service", x = "Salary($)", y = "Years of service")
plot2 <- ggplot(Salaries, aes(x = salary, y = sex, color = sex))+geom_point()+
labs(title = "salary vs gender", x = "Salary($)", y = "Gender")
plot3 <- ggplot(Salaries, aes(x = salary, y = rank))+geom_point(color = "blue")+
labs(title = "Salary vs Rank ", x = "Salary($)", y = "Rank")
plot4 <- ggplot(Salaries, aes(x = salary, y = discipline))+geom_point(color = "violet")+
labs(title = "Salary vs Discipline", x = "Salary($)", y = "Discipline")
plot1
plot2
plot3
plot4
# Data Visualization based on response variable(salary) vs explanatory variable(yrs_service, sex, rank, discipline) using ggplot() function from tidyverse package/ suit
plot1 <- ggplot(Salaries, aes(x = salary, y = yrs_service))+geom_point(color = "red") +
labs(title = "Salary vs Years of service", x = "Salary($)", y = "Years of service")
plot2 <- ggplot(Salaries, aes(x = salary, y = sex, fill= sex))+geom_boxplot()+
labs(title = "salary vs gender", x = "Salary($)", y = "Gender")
plot3 <- ggplot(Salaries, aes(x = salary, y = rank, fill = rank))+geom_bar()+
labs(title = "Salary vs Rank ", x = "Salary($)", y = "Rank")
plot4 <- ggplot(Salaries, aes(x = salary, y = discipline))+geom_bar()+
labs(title = "Salary vs Discipline", x = "Salary($)", y = "Discipline")
plot1
plot2
plot3
# Data Visualization based on response variable(salary) vs explanatory variable(yrs_service, sex, rank, discipline) using ggplot() function from tidyverse package/ suit
plot1 <- ggplot(Salaries, aes(x = salary, y = yrs_service))+geom_point(color = "red") +
labs(title = "Salary vs Years of service", x = "Salary($)", y = "Years of service")
plot2 <- ggplot(Salaries, aes(x = salary, y = sex, fill= sex))+geom_boxplot()+
labs(title = "salary vs gender", x = "Salary($)", y = "Gender")
plot3 <- ggplot(Salaries, aes(x = salary, y = rank, fill = rank))+geom_bar()+
labs(title = "Salary vs Rank ", x = "Salary($)", y = "Rank")
plot4 <- ggplot(Salaries, aes(x = salary, y = discipline))+geom_bar()+
labs(title = "Salary vs Discipline", x = "Salary($)", y = "Discipline")
plot1
plot2
plot3
# Data Visualization based on response variable(salary) vs explanatory variable(yrs_service, sex, rank, discipline) using ggplot() function from tidyverse package/ suit
plot1 <- ggplot(Salaries, aes(x = salary, y = yrs_service))+geom_point(color = "red") +
labs(title = "Salary vs Years of service", x = "Salary($)", y = "Years of service")
plot2 <- ggplot(Salaries, aes(x = salary, y = sex, fill= sex))+geom_boxplot()+
labs(title = "salary vs gender", x = "Salary($)", y = "Gender")
plot3 <- ggplot(Salaries, aes(x = salary, y = rank, fill = rank))+geom_bar()+
labs(title = "Salary vs Rank ", x = "Salary($)", y = "Rank")
plot4 <- ggplot(Salaries, aes(x = salary, y = discipline))+geom_bar()+
labs(title = "Salary vs Discipline", x = "Salary($)", y = "Discipline")
plot1
plot2
plot3
# Data Visualization based on response variable(salary) vs explanatory variable(yrs_service, sex, rank, discipline) using ggplot() function from tidyverse package/ suit
plot1 <- ggplot(Salaries, aes(x = salary, y = yrs_service))+geom_point(color = "red") +
labs(title = "Salary vs Years of service", x = "Salary($)", y = "Years of service")
plot2 <- ggplot(Salaries, aes(x = salary, y = sex, fill= sex))+geom_boxplot()+
labs(title = "salary vs gender", x = "Salary($)", y = "Gender")
plot3 <- ggplot(Salaries, aes(x = salary, y = rank, fill = rank))+geom_boxplot()+
labs(title = "Salary vs Rank ", x = "Salary($)", y = "Rank")
plot4 <- ggplot(Salaries, aes(x = salary, y = discipline))+geom_boxplot()+
labs(title = "Salary vs Discipline", x = "Salary($)", y = "Discipline")
plot1
plot2
plot3
plot4
# Data Visualization based on response variable(salary) vs explanatory variable(yrs_service, sex, rank, discipline) using ggplot() function from tidyverse package/suit
plot1 <- ggplot(Salaries, aes(x = salary, y = yrs_service))+geom_point(color = "red") +
labs(title = "Salary vs Years of service", x = "Salary($)", y = "Years of service")
plot2 <- ggplot(Salaries, aes(x = salary, y = sex, fill= sex))+geom_boxplot()+
labs(title = "salary vs gender", x = "Salary($)", y = "Gender")
plot3 <- ggplot(Salaries, aes(x = salary, y = rank, fill = rank))+geom_boxplot()+
labs(title = "Salary vs Rank ", x = "Salary($)", y = "Rank")
plot4 <- ggplot(Salaries, aes(x = salary, y = discipline, fill = discipline))+geom_boxplot()+
labs(title = "Salary vs Discipline", x = "Salary($)", y = "Discipline")
plot1
plot2
plot3
plot4
library(titanic)
View(titanic_test)
# Two pair hypothesis t_test using t_test() function from rstatix package.
test2 <- Salaries %>%
t_test(salary ~ sex) %>%
add_significance()
test2
# Using Case_when(), mutate() functions in tidyverse package/suit we can change the values of the data which are present in dataframe/ tibble as follows
# I converted the categorical variables in to numerical values to calculate the correlation among the variables.
Salaries <- Salaries %>%
mutate(rank = case_when(
rank == "Prof"      ~ "1",
rank == "AssocProf" ~ "2",
rank == "AsstProf"  ~ "3",
TRUE                ~  as.character(rank)
),
discipline = case_when(
discipline == "A" ~ "1",
discipline == "B" ~ "2",
TRUE              ~ as.character(discipline)
),
sex = case_when(
sex == "Female" ~ "1",
sex == "Male"   ~ "2",
TRUE            ~ as.character(sex)
),
rank =as.numeric(rank),
discipline = as.numeric(discipline),
sex = as.numeric(sex)
)
datatable(head(Salaries, 20),
rownames = FALSE,
extensions = 'Scroller',
filter = 'bottom')
chosen.lm <- lm(salary~rank+discipline+sex, data = Salaries)
#get_regression_table is from the moderndive package
chosen.table <- get_regression_table(chosen.lm, digits = 15)
# prints the intercept, coefficients og the explanatory variables.
chosen.lm
plot(chosen.lm, 1, col="blue", pch=19)
#NCV TEST
NCV <- ncvTest(chosen.lm)
NCV
# Model selection using regsubset() function from leaps package
backward <- regsubsets(salary~., data = Salaries, method = "backward")
# summary is from base R package.
summary(backward)
plot(forward, scale="adjr2", main="Forward: Adjusted R Square")
# For selecting required data variables using select() function from tidyverse package
Salaries <- Salaries %>%
select(rank, discipline, yrs_service, sex, salary)
# Printing Data Table in an  interactive manner using datatable function from "DT" package.
datatable(head(Salaries, 20),
rownames = FALSE,
extensions = 'Scroller',
filter = 'bottom')
# In order to have correlation matrix, we need the categorical data must be in numbers
COR <- cor(Salaries[,c(1, 2, 4, 5)])
COR %>% knitr::kable()
#vif is From Cars Package  check
vif(chosen.lm) %>% knitr::kable()
chosen.table %>% knitr::kable()
chosen.table %>% knitr::kable()
library(ggpubr)     # to draw ggqqplots through which we can find the normality of sample data set
library(tidyverse)  # For data wrangling, piping, datavisulization.
library(qqplotr)
library(rstatix)    # Pipe Friendliy R-Functions for statistical analyses.
library(gridExtra)  # For arranging the plots
library(car)        # for durbin watson test
library(leaps)      # For selecting Regression Model
library(moderndive) #Datasets and wrapper functions for tidyverse-friendly introductory linear regression
library(DT)         # For Interactive data sets
chosen.table %>% knitr::kable()
# get_regression_summaries() is from moderndive package used to print summary statastics for lm() regression in a clean format
Salaries.sum <-  get_regression_summaries(chosen.lm, digits=20)
Salaries.sum %>% knitr::kable()
#get_regression_table is from the moderndive package, which is used in creating chosen.table
#
chosen.table %>% knitr::kable()
head(SalariesA, 20)%>% knitr::kable()
#vif is From Cars Package  check
vif(chosen.lm) %>% knitr::kable()
renderPlot(ggplot(Salaries,
mapping = aes_string(x = input$CategoricalBarvariable,
fill = input$CategoricalBarvariable))+
geom_bar(col = "Blue"))
renderPlot(ggplot(Salaries,
mapping = aes_string(x = input$CategoricalBarvariable,
fill = input$CategoricalBarvariable))+
geom_bar(col = "Blue"))
install.packages("prettydoc")
install.packages('rsconnect')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='sriharsha1',
token='23522A4BD3427E4BB28CF67CF161FCDC',
secret='<SECRET>')
rsconnect::setAccountInfo(name='sriharsha1', token='23522A4BD3427E4BB28CF67CF161FCDC', secret='5dhi2I4T576NOtAHLldbzTj8az92SUNU6Q5xxjGT')
rsconnect::setAccountInfo(name='sriharsha1', token='23522A4BD3427E4BB28CF67CF161FCDC', secret='5dhi2I4T576NOtAHLldbzTj8az92SUNU6Q5xxjGT')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='sriharsha1', token='23522A4BD3427E4BB28CF67CF161FCDC', secret='5dhi2I4T576NOtAHLldbzTj8az92SUNU6Q5xxjGT')
